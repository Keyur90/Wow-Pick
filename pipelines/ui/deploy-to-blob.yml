parameters:
  - name: envName
    type: string
  - name: region
    type: string
  - name: appName
    type: string
    default: $(appName)
  - name: artifact
    type: string
  - name: storageAccountName
    type: string
  - name: dependsOn
    type: object

stages:
  - stage: Deploy_${{ upper(parameters.envName) }}_${{ upper(parameters.region) }}
    displayName: Deploy ${{ upper(parameters.envName) }} ${{ upper(parameters.region) }}
    dependsOn: ${{ parameters.dependsOn }}
    jobs:
      - deployment: Deploy
        environment: ${{ parameters.appName }}-${{ parameters.envName }}-${{ parameters.region }}
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: ${{ parameters.artifact }}
                - task: AzureCLI@2
                  displayName: Set Storage Account Key
                  inputs:
                    ${{ if eq(contains(parameters.envName, 'dev' ), 'True') }}:
                      azureSubscription: WOWDEVTEST-ECF
                    ${{ if eq(parameters.envName, 'uat') }}:
                      azureSubscription: WOWUAT-ECF
                    ${{ if in(parameters.envName, 'pt') }}:
                      azureSubscription: WOWUAT-ECF
                    ${{ if eq(parameters.envName, 'prod') }}:
                      azureSubscription: WOWPROD-ECF
                    scriptType: bash
                    scriptLocation: inlineScript
                    inlineScript: echo "##vso[task.setvariable variable=storageAccountKey;issecret=true]$(az storage account keys list -n ${{ parameters.storageAccountName }} --query "[0].value" -o tsv)"
                    failOnStandardError: true
                - script: |
                    az storage blob upload-batch --account-name ${{ parameters.storageAccountName }} --account-key '$(storageAccountKey)' -d '$web' -s '$(Agent.BuildDirectory)/${{ parameters.artifact }}'
                  displayName: Upload to Azure Blob
